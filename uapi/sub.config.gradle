subprojects {
    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'jacoco'
    apply plugin: 'maven'
    apply plugin: 'maven-publish'

    group = "${allCfg.group}"
    version = getBuildVersion(project.name)
    sourceCompatibility = 11
    targetCompatibility = 11

    configurations {
        codacy
    }

    dependencies {
        testCompile (
            coordinate(libs.spock)
        )
        testRuntime (
            coordinate(libs.cglib),     // allows mocking of classes (in addition to interfaces)
            coordinate(libs.objenesis)  // allows mocking of classes without default constructor (together with CGLIB)
        )
    }

    ext.moduleName = "${project.name}"

    compileJava {
        inputs.property("moduleName", moduleName)
        doFirst {
            options.compilerArgs = [
                    '--module-path', classpath.asPath,
            ]
            classpath = files()
        }
    }

    def generatedSources = ['**/*_Generated.*']

    test {
        jacoco {
            excludes = generatedSources
        }
    }

    jar {
        manifest.attributes
        exclude('**/*.java')
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives sourcesJar
    }

    jacoco {
        toolVersion = libs.jacoco.version
    }

    build.dependsOn jacocoTestReport
}